apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-oauth-config-keycloak
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: oauth-config-keycloak
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Secret
                data:
                  htpasswd: dXNlcjE6JDJ5JDA1JEJqaHZRRGxJQUJOMGNmTlFOTllKc3V1ZWNvWlAueDMvT3RndjQwQXJzNlVSUHd5QzF3ZTNPCg==
                metadata:
                  name: htpasswd-secret
                  namespace: openshift-config
                type: Opaque
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: oauth-config-keycloak
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: config.openshift.io/v1
                kind: OAuth
                metadata:
                  name: cluster
                spec:
                  identityProviders:
                    - htpasswd:
                        fileData:
                          name: htpasswd-secret
                      mappingMethod: claim
                      name: htpasswd_provider
                      type: HTPasswd
                    - mappingMethod: claim
                      name: keycloak
                      openID:
                        claims:
                          email:
                            - email
                          name:
                            - name
                          preferredUsername:
                            - preferred_username
                        clientID: '{{ fromClusterClaim "name" }}'
                        clientSecret:
                          name: keycloak-client-secret
                        extraScopes: []
                        issuer: >-
                          https://keycloak-rhsso-operator.apps.cluster-gn2t9.gn2t9.sandbox563.opentlc.com/auth/realms/ocp
                      type: OpenID
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: oauth-config-secret
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                data:
                  clientSecret: dGVzdC1zZWNyZXQ=
                kind: Secret
                metadata:
                  name: keycloak-client-secret
                  namespace: openshift-config
                type: Opaque
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-oauth-config-keycloak
placementRef:
  name: placement-policy-oauth-config-keycloak
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-oauth-config-keycloak
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-oauth-config-keycloak
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: environment, operator: In, values: ["dev"]}
